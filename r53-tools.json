{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "WEX Inc., AWS Lambda tools for CloudFormation.",
  "Resources": {
    "VpcTransformExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "VpcTransformFunctionPermissions": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": { "Fn::GetAtt": [ "VpcTransformFunction", "Arn" ] },
        "Principal": "cloudformation.amazonaws.com"
      }
    },
    "VpcTransformFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "def handler(event, context):",
                "  a = [ip.split(':')",
                "        for ip",
                "        in  event['templateParameterValues']['RealResolverIps']]",
                "  b = [{ 'Ip': ip[0], 'Port': ip[1] }",
                "          for ip",
                "          in a]",
                "  r = {",
                "    'requestId': event['requestId'],",
                "    'status': 'SUCCESS',",
                "    'fragment': b,",
                "  }",
                "  return r"
              ]
            ]
          }
        },
        "FunctionName": "vpcMacroFunction",
        "Handler": "index.handler",
        "Runtime": "python3.7",
        "Timeout": "5",
        "Role": { "Fn::GetAtt": [ "VpcTransformExecutionRole", "Arn" ] }
      }
    },
    "Transform": {
      "Type": "AWS::CloudFormation::Macro",
      "Properties": {
        "Name": "vpcMacro",
        "FunctionName": { "Fn::GetAtt": [ "VpcTransformFunction", "Arn" ] }
      }
    }
  }
}
